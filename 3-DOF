% Define the link lengths (in meters)
L1 = 0.5;
L2 = 0.3;
L3 = 0.2; % Third link length

% Define the joint angles (in degrees)
theta1 = 45; % First joint angle
theta2 = 30; % Second joint angle
theta3 = 90; % Third joint angle

% Convert joint angles from degrees to radians
theta1 = deg2rad(theta1);
theta2 = deg2rad(theta2);
theta3 = deg2rad(theta3);

% Calculate the end-effector position (x, y, z)
x = L1 * cos(theta1) + L2 * cos(theta1 + theta2) + L3 * cos(theta1 + theta2 + theta3);
y = L1 * sin(theta1) + L2 * sin(theta1 + theta2) + L3 * sin(theta1 + theta2 + theta3);
z = 0; % Assume the arm lies in the xy-plane (no z-component)

% Define the coordinates of the joints
joint1_x = 0;
joint1_y = 0;
joint1_z = 0;
joint2_x = L1 * cos(theta1);
joint2_y = L1 * sin(theta1);
joint2_z = 0;
joint3_x = L1 * cos(theta1) + L2 * cos(theta1 + theta2);
joint3_y = L1 * sin(theta1) + L2 * sin(theta1 + theta2);
joint3_z = 0;

% Create a 3D plot for the robotic arm
figure;
plot3([joint1_x, joint2_x, joint3_x, x], [joint1_y, joint2_y, joint3_y, y], [joint1_z, joint2_z, joint3_z, z], 'bo-', 'LineWidth', 2);
hold on;
scatter3(x, y, z, 100, 'g', 'filled'); % Mark the end-effector in green
xlabel('X Position (m)');
ylabel('Y Position (m)');
zlabel('Z Position (m)');
title('3-DOF Robotic Arm Forward Kinematics');
grid on;

% Mark the joints
scatter3([joint1_x, joint2_x, joint3_x], [joint1_y, joint2_y, joint3_y], [joint1_z, joint2_z, joint3_z], 100, 'r', 'filled');
hold off;

% Set the view to better visualize the 3D plot
view(45, 30);
